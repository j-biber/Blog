{"version":3,"sources":["view/components/HeaderMenu/HeaderMenu.js","view/components/Header/Header.js","view/components/Footer/Footer.js","view/Posts/PostList/PostItem.js","view/Posts/PostList/PostList.js","models/Post.js","shared/constants.js","services/PostService.js","view/Posts/PostsPage.js","view/Authors/AuthorsList/AuthorsList.js","models/Address.js","models/Company.js","models/Author.js","services/AuthorService.js","view/Authors/AuthorsPage.js","view/About/About.js","view/Posts/SinglePost/PostAuthor.js","view/Posts/SinglePost/RelatedPosts.js","view/Posts/SinglePostPage.js","view/Authors/SingleAuthor/AuthorInfo.js","view/Authors/SingleAuthor/AuthorAddress.js","view/Authors/SingleAuthor/AuthorCompany.js","view/Authors/SingleAuthorPage.js","view/Posts/CreatePostPage.js","view/components/Main/Main.js","view/App.js","serviceWorker.js","index.js"],"names":["HeaderMenu","react_default","a","createElement","className","react_router_dom","to","Header","HeaderMenu_HeaderMenu","Footer","PostItem","_ref","postId","authorId","body","title","concat","slice","PostList","posts","map","_ref2","PostItem_PostItem","key","Post","id","userId","Object","classCallCheck","this","API_ENDPOINT","postService","fetchPosts","POSTS_API","fetch","then","response","json","post","fetchSinglePost","POST_API","fetchAuthorRelatedPost","RELATED_POSTS_API","reduce","acc","obj","push","relatedPosts","postData","data","method","JSON","stringify","PostsPage","props","_this","possibleConstructorReturn","getPrototypeOf","call","listOfPosts","setState","state","PostList_PostList","Component","AuthorsList","authors","author","name","Address","street","city","zipcode","geo","Company","catchPhrase","Author","username","email","address","phone","company","authorService","fetchAuthors","AUTHORS_API","fetchSingleAuthor","SINGLE_AUTHOR_API","AuthorsPage","listOfAuthors","AuthorsList_AuthorsList","About","Fragment","PostAuthor","fetchAuthor","console","log","RelatedPosts","_this$props","listOfRelatedPosts","filter","prevProps","index","SinglePostPage","fetchPost","match","params","url","_this$state$post","PostAuthor_PostAuthor","RelatedPosts_RelatedPosts","AuthorInfo","src","alt","AuthorAddress","lat","lng","width","height","scrolling","marginHeight","marginWidth","frameBorder","style","border","AuthorCompany","SingleAuthorPage","singleAuthor","_this$state$author","_this$state$author$ad","_this$state$author$ad2","AuthorInfo_AuthorInfo","AuthorAddress_AuthorAddress","AuthorCompany_AuthorCompany","CreatePostPage","onInputChange","event","preventDefault","_event$target","target","value","trim","onSubmitForm","_this$state","history","onCancelForm","type","placeholder","onChange","cols","rows","onClick","Main","react_router","path","component","App","Header_Header","Main_Main","Footer_Footer","Boolean","window","location","hostname","ReactDOM","render","src_view_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5847a22c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HeaderMenu = () => {\r\n    return (\r\n        <nav className='header-menu'>\r\n            <ul>\r\n                <li><Link to='/'>Home</Link> </li>\r\n                <li><Link to='/authors'>Authors</Link></li>\r\n                <li><Link to='/about'>About</Link></li>\r\n                <li><Link to='/posts/new'>CreatePost</Link></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport { HeaderMenu }","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { HeaderMenu } from '../HeaderMenu/HeaderMenu';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <div className='container flex-row'>\r\n                <Link to='/'><h1>BLOG</h1></Link>\r\n                <HeaderMenu />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport { Header }","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"container flex-row\">\r\n                Copyright 2019\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport { Footer } ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PostItem = ({ postId, authorId, body, title }) => {\r\n    return (\r\n        <li>\r\n            <Link to={`/posts/${authorId}/${postId}`}><h3>{title}</h3></Link>\r\n            <div>{body.slice(0, 70) + '...'}</div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport { PostItem }","import React from 'react'\r\nimport { PostItem } from './PostItem'\r\n\r\nconst PostList = ({ posts }) => {\r\n    return (\r\n        <ul className=\"post-list\">\r\n            {posts.map(({ postId, authorId, title, body }) =>\r\n                <PostItem\r\n                    key={postId}\r\n                    postId={postId}\r\n                    authorId={authorId}\r\n                    title={title}\r\n                    body={body}\r\n                />)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport { PostList }","class Post {\r\n    constructor({ id, userId, title, body }) {\r\n        this.postId = id;\r\n        this.authorId = userId;\r\n        this.title = title;\r\n        this.body = body;\r\n    }\r\n}\r\n\r\nexport default Post;","export const API_ENDPOINT = 'https://jsonplaceholder.typicode.com';","import Post from '../models/Post';\r\nimport { API_ENDPOINT } from '../shared/constants';\r\n\r\nclass PostService {\r\n\r\n    fetchPosts = () => {\r\n        const POSTS_API = `${API_ENDPOINT}/posts`;\r\n\r\n        return fetch(POSTS_API)\r\n            .then(response => response.json())\r\n            .then(posts => posts.map(post => new Post(post)))\r\n    }\r\n\r\n    fetchSinglePost = (postId) => {\r\n        const POST_API = `${API_ENDPOINT}/posts/${postId}`;\r\n\r\n        return fetch(POST_API)\r\n            .then(response => response.json())\r\n            .then(post => new Post(post))\r\n    }\r\n\r\n    fetchAuthorRelatedPost = (userId) => {\r\n        const RELATED_POSTS_API = `${API_ENDPOINT}/users/${userId}/posts`;\r\n\r\n        return fetch(RELATED_POSTS_API)\r\n            .then(response => response.json())\r\n            .then(posts => {\r\n                return posts.reduce((acc, obj) => {\r\n                    if (obj.userId === userId) acc.push(obj);\r\n                    return acc;\r\n                }, [])\r\n            })\r\n            .then(relatedPosts => relatedPosts.map(post => new Post(post)))\r\n            .then(posts => posts.slice(0, 10))\r\n\r\n    }\r\n\r\n    postData = (data) => {\r\n        const POSTS_API = `${API_ENDPOINT}/posts`;\r\n\r\n        return fetch(POSTS_API, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const postService = new PostService();\r\n","import React, { Component } from 'react'\r\nimport { PostList } from './PostList/PostList'\r\nimport { postService } from '../../services/PostService';\r\nimport './PostsPage.css'\r\n\r\nclass PostsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n        }\r\n    }\r\n    \r\n    fetchPosts = () => {\r\n        postService.fetchPosts()\r\n            .then(listOfPosts => this.setState({\r\n                posts: listOfPosts,\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPosts();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <PostList posts={this.state.posts} />\r\n        )\r\n    }\r\n}\r\n\r\nexport { PostsPage }","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AuthorsList = ({ authors }) => {\r\n    return (\r\n        <ul className=\"authors-list\">\r\n            {authors.map(author => <li><Link to={`/authors/${author.authorId}`}>{author.name}</Link></li>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport { AuthorsList }","class Address {\r\n    constructor({ street, city, zipcode, geo }) {\r\n        this.street = street;\r\n        this.city = city;\r\n        this.zipcode = zipcode;\r\n        this.geo = geo;\r\n    }\r\n}\r\n\r\nexport default Address\r\n\r\n","class Company {\r\n    constructor({ name, catchPhrase }) {\r\n        this.name = name;\r\n        this.catchPhrase = catchPhrase\r\n    }\r\n}\r\n\r\nexport default Company\r\n\r\n\r\n","import Address from './Address'\r\nimport Company from './Company'\r\n\r\nclass Author {\r\n    constructor({ id, name, username, email, address, phone, company }) {\r\n        this.authorId = id;\r\n        this.name = name;\r\n        this.username = username;\r\n        this.email = email;\r\n        this.address = new Address(address);\r\n        this.phone = phone;\r\n        this.company = new Company(company);\r\n    }\r\n}\r\n\r\nexport default Author\r\n\r\n","import Author from '../models/Author';\r\nimport { API_ENDPOINT } from '../shared/constants';\r\n\r\nclass AuthorService {\r\n\r\n    fetchAuthors = () => {\r\n        const AUTHORS_API = `${API_ENDPOINT}/users`;\r\n\r\n        return fetch(AUTHORS_API)\r\n            .then(response => response.json())\r\n            .then(data => data.map(author => new Author(author)))\r\n    }\r\n\r\n    fetchSingleAuthor = (userId) => {\r\n        const SINGLE_AUTHOR_API = `${API_ENDPOINT}/users/${userId}`;\r\n\r\n        return fetch(SINGLE_AUTHOR_API)\r\n            .then(response => response.json())\r\n            .then(author => new Author(author))\r\n\r\n    }\r\n}\r\n\r\nexport const authorService = new AuthorService();\r\n","import React, { Component } from 'react';\r\nimport { AuthorsList } from './AuthorsList/AuthorsList';\r\nimport { authorService } from '../../services/AuthorService'\r\nimport './AuthorsPage.css';\r\n\r\n\r\nclass AuthorsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            authors: [],\r\n        }\r\n    }\r\n\r\n    fetchAuthors = () => {\r\n        authorService.fetchAuthors()\r\n            .then(listOfAuthors => this.setState({\r\n                authors: listOfAuthors,\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchAuthors();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AuthorsList authors={this.state.authors} />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport { AuthorsPage }","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <>\r\n            <div>\r\n                <h2>About</h2>\r\n                <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Veritatis totam excepturi nostrum nesciunt molestiae dignissimos fugit illo commodi fugiat ullam repellat architecto optio repudiandae ipsum mollitia nobis odit, dicta dolorem quisquam natus quae id dolore voluptatibus? Sed adipisci, officiis distinctio, neque dolorem nobis quis eveniet facilis iure quasi voluptas. Debitis dolorum at minus rerum sequi, facilis maxime nobis. Cupiditate dolorum obcaecati saepe suscipit voluptates magni voluptas quam est non blanditiis eius, sunt iste. Error assumenda quaerat in ipsum inventore sit quam cumque similique, eveniet corporis veritatis ad cum nemo repudiandae possimus pariatur, quis eius nam. Fuga ipsum voluptatem fugit quia sunt numquam commodi ad quidem repellendus? Placeat, eligendi! Doloribus, mollitia perferendis! Nemo temporibus blanditiis consectetur aliquam maxime minima voluptatem libero incidunt velit, nostrum similique aliquid consequuntur esse harum odio laborum distinctio dolorum animi voluptate iste ipsa? Non unde labore enim repellendus suscipit ex sapiente. Voluptatibus cumque sapiente minus. Mollitia, quas.</p>\r\n            </div>\r\n            <div>\r\n                <h2>Our Story</h2>\r\n                <p>Cupiditate dolorum obcaecati saepe suscipit voluptates magni voluptas quam est non blanditiis eius, sunt iste. Error assumenda quaerat in ipsum inventore sit quam cumque similique, eveniet corporis veritatis ad cum nemo repudiandae possimus pariatur, quis eius nam. Fuga ipsum voluptatem fugit quia sunt numquam commodi ad quidem repellendus? Placeat, eligendi! Doloribus, mollitia perferendis! Nemo temporibus blanditiis consectetur aliquam maxime minima voluptatem libero incidunt velit.</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { About }","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { authorService } from '../../../services/AuthorService';\r\n\r\nclass PostAuthor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            author: null,\r\n        }\r\n    }\r\n\r\n    fetchAuthor = () => {\r\n        const id = this.props.authorId;\r\n        console.log(id)\r\n        authorService.fetchSingleAuthor(id)\r\n            .then(author => this.setState({\r\n                author\r\n            }));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchAuthor();\r\n    }\r\n\r\n    render() {\r\n        const { author } = this.state;\r\n\r\n        if (!author) {\r\n            return (\r\n                <div>...</div>\r\n            )\r\n        }\r\n\r\n        const { name, authorId } = author;\r\n\r\n\r\n        return (\r\n            <Link to={`/authors/${authorId}`}><h3>{name}</h3></Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport { PostAuthor }","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { postService } from '../../../services/PostService'\r\n\r\nclass RelatedPosts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: null\r\n        }\r\n    }\r\n\r\n    fetchPosts = () => {\r\n        const { authorId, postId } = this.props;\r\n        postService.fetchAuthorRelatedPost(authorId)\r\n            .then(listOfRelatedPosts => this.setState({\r\n                posts: listOfRelatedPosts.filter(post => post.postId !== postId)\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPosts();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props !== prevProps) {\r\n            this.fetchPosts();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { posts } = this.state;\r\n\r\n        if (!posts) {\r\n            return (\r\n                <article className=\"related-posts\">\r\n                    <h2>No other posts from this author</h2>\r\n                </article>\r\n            )\r\n        }\r\n        \r\n        return (\r\n            <article className=\"related-posts\">\r\n                <h2> more posts from same author</h2>\r\n                <ul>\r\n                    {posts.map(({ title, body, authorId, postId }, index) => <li key={index}>\r\n                        <Link to={`/posts/${authorId}/${postId}`}><span className=\"bold\">{title.slice(0, 15)}</span> - {body.slice(0, 70)}</Link>\r\n                    </li>)}\r\n\r\n                </ul>\r\n            </article>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport { RelatedPosts }","import React, { Component } from 'react';\r\nimport { PostAuthor } from './SinglePost/PostAuthor';\r\nimport { RelatedPosts } from './SinglePost/RelatedPosts';\r\nimport { postService } from '../../services/PostService';\r\nimport './SinglePostPage.css';\r\n\r\n\r\nclass SinglePostPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            post: null,\r\n        }\r\n    }\r\n\r\n    fetchPost = () => {\r\n        const id = this.props.match.params.postId;\r\n        postService.fetchSinglePost(id)\r\n            .then(post => this.setState({\r\n                post\r\n            }));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPost();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.match.url !== prevProps.match.url) {\r\n            this.fetchPost();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { post } = this.state;\r\n\r\n        if (!post) {\r\n            return (\r\n                <div>Loading...</div>\r\n            )\r\n        }\r\n\r\n        const { postId, authorId, title, body } = this.state.post;\r\n        // const { authorId } = this.props.match.params.authorId;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"single-post\">\r\n                    <div className=\"post-title\">\r\n                        <h1>{title}</h1>\r\n                        <PostAuthor authorId={authorId} />\r\n                    </div>\r\n                    <div className=\"post-body\">\r\n                        {body}\r\n                    </div>\r\n                </div>\r\n                <RelatedPosts authorId={authorId} postId={postId} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport { SinglePostPage }","import React from 'react'\r\n\r\nconst AuthorInfo = ({ name, username, email, phone }) => {\r\n    return (\r\n        <article className=\"author-info flex-row\">\r\n            <div className=\"author-image\">\r\n                <img src=\"https://avatars1.githubusercontent.com/u/6689528?s=180&v=4\" alt=\"user\" />\r\n            </div>\r\n            <div className=\"author-info-body\">\r\n                <h2>{name}</h2>\r\n                <div>{username}</div>\r\n                <div>{email}</div>\r\n                <div>{phone}</div>\r\n            </div>\r\n        </article>\r\n\r\n    )\r\n}\r\n\r\nexport { AuthorInfo }","import React from 'react'\r\n\r\nconst AuthorAddress = ({ street, city, zipcode, lat, lng }) => {\r\n    return (\r\n        <article className=\"author-address flex-row\">\r\n            <div className=\"address-info\">\r\n                <h2>Address</h2>\r\n                <div>{street}</div>\r\n                <div>{city}</div>\r\n                <div>{zipcode}</div>\r\n            </div>\r\n            <div className=\"author-address-iframe\">\r\n                <iframe\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    scrolling=\"no\"\r\n                    marginHeight=\"0\"\r\n                    marginWidth=\"0\"\r\n                    title={street}\r\n                    frameBorder=\"0\"\r\n                    style={{ border: 0 }}\r\n                    src={`https://maps.google.com/maps?q=${lat},${lng}&z=15&output=embed`}\r\n                />\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport { AuthorAddress }","import React from 'react'\r\n\r\nconst AuthorCompany = ({ name, catchPhrase }) => {\r\n    return (\r\n        <article className=\"author-company\">\r\n            <div>\r\n                <h2>Company</h2>\r\n                <div>{name}</div>\r\n                <div>{catchPhrase}</div>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport { AuthorCompany }","import React, { Component } from 'react'\r\nimport { AuthorInfo } from './SingleAuthor/AuthorInfo'\r\nimport { AuthorAddress } from './SingleAuthor/AuthorAddress'\r\nimport { AuthorCompany } from './SingleAuthor/AuthorCompany'\r\nimport { Link } from 'react-router-dom'\r\nimport { authorService } from '../../services/AuthorService'\r\nimport './SingleAuthorPage.css';\r\n\r\n\r\nclass SingleAuthorPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            author: null,\r\n        }\r\n    }\r\n\r\n    fetchSingleAuthor = () => {\r\n        const id = this.props.match.params.authorId;\r\n        authorService.fetchSingleAuthor(id)\r\n            .then(singleAuthor => this.setState({\r\n                author: singleAuthor,\r\n            }))\r\n    }\r\n    componentDidMount() {\r\n        this.fetchSingleAuthor();\r\n    }\r\n    render() {\r\n        if (this.state.author) {\r\n\r\n            const { name, username, email, phone, address: { street,\r\n                city, zipcode, geo: { lat, lng } }, company } = this.state.author;\r\n\r\n            return (\r\n                <>\r\n                    <nav className=\"back\">\r\n                        <Link to='/'>Back</Link>\r\n                    </nav>\r\n                    <AuthorInfo\r\n                        name={name}\r\n                        username={username}\r\n                        email={email}\r\n                        phone={phone}\r\n                    />\r\n                    <AuthorAddress\r\n                        street={street}\r\n                        city={city}\r\n                        zipcode={zipcode}\r\n                        lat={lat}\r\n                        lng={lng}\r\n\r\n                    />\r\n                    <AuthorCompany\r\n                        name={company.name}\r\n                        catchPhrase={company.catchPhrase}\r\n                    />\r\n                </>\r\n            )\r\n\r\n        } else {\r\n\r\n            return (\r\n                <div>Loading...</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport { SingleAuthorPage }","import React, { Component } from 'react';\r\nimport { postService } from '../../services/PostService'\r\nimport './CreatePostPage.css';\r\n\r\nclass CreatePostPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: null,\r\n            body: null,\r\n        }\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        const { name, value } = event.target;\r\n        // this.setState({\r\n        //     [name]: value.trim(),\r\n        // })\r\n\r\n        if (name === 'title') this.setState({ title: value.trim() });\r\n        else this.setState({ body: value.trim() })\r\n    }\r\n\r\n    onSubmitForm = (event) => {\r\n        event.preventDefault();\r\n\r\n        const userId = 1;\r\n        // const { ...data } = this.state\r\n\r\n        const { title, body } = this.state;\r\n        postService.postData({\r\n            title: title,\r\n            body: body,\r\n            userId: userId,\r\n        })\r\n            .then(response => {\r\n                this.props.history.push('/');\r\n            });\r\n\r\n    }\r\n\r\n    onCancelForm = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className='new-post-main-title'>New Post</h1>\r\n                <form>\r\n                    <div className='new-post-title'>\r\n                        <h2>Title</h2>\r\n                        <input type=\"text\" name=\"title\" placeholder=\"Enter Post Title\" onChange={this.onInputChange} />\r\n                    </div>\r\n\r\n                    <div className='new-post-body'>\r\n                        <h2>Content</h2>\r\n                        <textarea name=\"body\" cols=\"60\" rows=\"10\" placeholder=\"Post Content\" onChange={this.onInputChange} />\r\n                    </div>\r\n\r\n                    <div className='form-buttons'>\r\n                        <input type=\"button\" value=\"Cancel\" onClick={this.onCancelForm} />\r\n                        <input type=\"submit\" onClick={this.onSubmitForm} />\r\n                    </div>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport { CreatePostPage }\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { PostsPage } from '../../Posts/PostsPage';\r\nimport { AuthorsPage } from '../../Authors/AuthorsPage';\r\nimport { About } from '../../About/About';\r\nimport { SinglePostPage } from '../../Posts/SinglePostPage';\r\nimport { SingleAuthorPage } from '../../Authors/SingleAuthorPage';\r\nimport { CreatePostPage } from '../../Posts/CreatePostPage'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <main className='container'>\r\n            <Switch>\r\n                <Route path=\"/posts/:authorId/:postId\" component={SinglePostPage} />\r\n                <Route path=\"/posts/new\" component={CreatePostPage} />\r\n                <Route path=\"/authors/:authorId\" component={SingleAuthorPage} />\r\n                <Route path=\"/authors\" component={AuthorsPage} />\r\n                <Route path=\"/about\" component={About} />\r\n                <Route path=\"/\" component={PostsPage} />\r\n            </Switch>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport { Main }","import React from 'react';\r\nimport { Header } from './components/Header/Header';\r\nimport { Footer } from './components/Footer/Footer';\r\nimport { Main } from './components/Main/Main';\r\nimport './App.css';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default App ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './view/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter >\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}